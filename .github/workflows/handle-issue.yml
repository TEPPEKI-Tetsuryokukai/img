name: Process File Upload from Issue

on:
  issues:
    types: [opened]

jobs:
  process-upload:
    if: contains(github.event.issue.labels.*.name, 'upload')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Extract file data from issue
      id: extract_data
      run: |
        # Issue本文からファイルデータとファイル名を抽出（より堅牢に）
        BODY="${{ github.event.issue.body }}"
    
        # Markdown形式の本文からデータを抽出
        FILE_DATA=$(echo "$BODY" | grep -A1 'file_data' | tail -n1 | sed 's/^\*\*file_data\*\*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
        FILE_NAME=$(echo "$BODY" | grep -A1 'file_name' | tail -n1 | sed 's/^\*\*file_name\*\*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
    
        # もし空なら別の形式を試す
        if [ -z "$FILE_DATA" ]; then
          FILE_DATA=$(echo "$BODY" | grep -A1 'ファイルデータ' | tail -n1 | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
         fi
        if [ -z "$FILE_NAME" ]; then
          FILE_NAME=$(echo "$BODY" | grep -A1 'ファイル名' | tail -n1 | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
        fi
    
        # Base64データのみを抽出
        CLEAN_DATA=$(echo "$FILE_DATA" | sed 's/^data:[^;]*;base64,//' | tr -d '\n' | tr -d '\r')
    
        echo "file_name=${FILE_NAME}" >> $GITHUB_OUTPUT
        echo "file_data=${CLEAN_DATA}" >> $GITHUB_OUTPUT

    - name: Create file
      run: |
        # ファイルタイプに基づいてフォルダを決定
        FILE_NAME="${{ steps.extract_data.outputs.file_name }}"
        if [[ "$FILE_NAME" == *.jpg ]] || [[ "$FILE_NAME" == *.jpeg ]] || [[ "$FILE_NAME" == *.png ]] || [[ "$FILE_NAME" == *.gif ]] || [[ "$FILE_NAME" == *.webp ]]; then
          FOLDER="images"
        elif [[ "$FILE_NAME" == *.mp4 ]] || [[ "$FILE_NAME" == *.webm ]] || [[ "$FILE_NAME" == *.mov ]]; then
          FOLDER="videos"
        else
          FOLDER="files"
        fi
        
        # Base64データをデコードしてファイルを作成
        echo "${{ steps.extract_data.outputs.file_data }}" | base64 -d > "uploads/$FOLDER/$FILE_NAME"
        
        echo "Created file: uploads/$FOLDER/$FILE_NAME"

    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add uploads/
        git commit -m "Add uploaded file: ${{ steps.extract_data.outputs.file_name }}"
        git push

    - name: Create comment with URL
      run: |
        FILE_NAME="${{ steps.extract_data.outputs.file_name }}"
        if [[ "$FILE_NAME" == *.jpg ]] || [[ "$FILE_NAME" == *.jpeg ]] || [[ "$FILE_NAME" == *.png ]] || [[ "$FILE_NAME" == *.gif ]] || [[ "$FILE_NAME" == *.webp ]]; then
          FOLDER="images"
        elif [[ "$FILE_NAME" == *.mp4 ]] || [[ "$FILE_NAME" == *.webm ]] || [[ "$FILE_NAME" == *.mov ]]; then
          FOLDER="videos"
        else
          FOLDER="files"
        fi
        
        URL="https://raw.githubusercontent.com/${{ github.repository }}/main/uploads/$FOLDER/$FILE_NAME"
        
        # IssueにコメントとしてURLを投稿
        curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
          -d "{\"body\": \"ファイルがアップロードされました！\\n\\n**URL:** \\n\\`$URL\\`\\n\\n**プレビュー:** \\n![Preview]($URL)\"}"

    - name: Close issue
      run: |
        curl -s -X PATCH \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
          -d '{"state": "closed"}'
